events { }

http {
    server {
        listen 443 ssl;
        server_name 127.0.0.1;  # Replace with your domain name
        
        ssl_certificate /etc/nginx/nginx.crt;
        ssl_certificate_key /etc/nginx/nginx.key;
        
        # Enable compression
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        
        # Frontend Configuration
        root /var/www/frontend;
        
        # Next.js static files
        location /_next/static/ {
            alias /var/www/frontend/.next/static/;
            expires 1y;
            add_header Cache-Control "public, no-transform, must-revalidate";
        }
        
        # Next.js API routes
        location /api/ {
            proxy_pass http://backend:8000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # Main Next.js application
        location / {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

         location /api/ws/ {
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
# events{
# }
# http {
# server {
#     listen 443 ssl;
#     server_name 127.0.0.1;  # You can replace with your domain name if applicable

#     ssl_certificate /etc/nginx/nginx.crt;  # Path to your SSL certificate
#     ssl_certificate_key /etc/nginx/nginx.key;  # Path to your SSL certificate key


#     root /var/www/frontend;

#     # Backend Proxy Configuration
#     location /api/ {
#         proxy_pass http://backend:8000/;  # Forward requests to backend service on port 8000
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#     }

#     # Frontend Proxy Configuration (React or Next.js app)
#     location / {
#         proxy_pass http://frontend:3000/;  # Forward requests to frontend service on port 3000
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#     }

#     location /_next/static/ {
#         alias /var/www/frontend/.next/static/;
#         expires 1y;
#         add_header Cache-Control "public, no-transform, must-revalidate";
#     }

#     location / {
#         try_files $uri $uri/ /index.html;
#     }
# }
# }