version: '3'
services:
    db:
      image: postgres:16
      ports: 
        - 5432:5432
      environment:
        # POSTGRES_HOST_AUTH_METHOD: db
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: password
        POSTGRES_DB: transc_db

      networks:
        - nat
      volumes:
        - postgres_v:/var/lib/postgresql/data
    backend:
      build:
        context: backend/back_end
        dockerfile: Dockerfile
      depends_on:
        - db
      ports:
        - 8000:8000
        # - 443:443
      # env_file:
      #   - ./env/.env: 
      volumes:
        - ./backend/env/.env:/app/.env
      networks:
        - nat
    frontend:
      build:
        context: frontend
        dockerfile: Dockerfile
      depends_on:
        - backend
      ports:
        - 3000:3000
        # - 443:443
      volumes:
        - ./env/.env:/app/.env
        - ./frontend/:/var/www/frontend
      networks:
        - nat
    nginx:
      build:
        context: nginx
        dockerfile: Dockerfile
      volumes:
        - ./frontend/:/var/www/frontend
        - ./backend/back_end/:/var/www/backend/
      ports:
        - 443:443
      networks:
        - nat
    admin:
      image: adminer
      restart: always
      depends_on:
        - db
      ports:
       - 8080:8080
      networks:
        - nat
    redis:
      ports:
        - 6379:6379
      image: redis
      restart: always
      networks:
          - nat
networks:
   nat:
    driver: bridge
volumes:
  postgres_v:
    driver_opts:
      type: none
      device: /Users/$USER/Desktop/db
      o: bind
  # backend_v:
  #   driver_opts:
  #     type: none
  #     device: ./env/.env
  #     o: bind